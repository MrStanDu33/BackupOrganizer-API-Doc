_id: spc_203595fbb6c94a48950187f1ac20fc41
contentType: yaml
contents: >
  openapi: 3.0.0

  info:
    version: 1.0.0
    title: Backup-Organizer API
    description: Backup-Organizer is a tool to manage projects and websites linked on specific clients. It help to configure backups plans.
    thermsOfService: 'https://backup-organizer.daniels-roth-stan.fr'
    contact:
      name: DANIELS-ROTH Stan
      url: 'https://daniels-roth-stan.fr'
      email: contact@daniels-roth-stan.fr
    license:
      name: Apache 2.0
      url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  servers:
    - url: 'http://backup-organizer.localhost/api/v1'
      description: Dev Server
  schemes:
    - https
    - http
  tags:
    - name: user
      description: Everythings about users
    - name: customer
      description: Everything about customers
    - name: project
      description: Everything about projects
    - name: website
      description: Everything about websites
    - name: database
      description: Everything about databases
    - name: backup
      description: Everything about backups
  paths:
    /user/login:
      post:
        tags:
          - user
        summary: Log user in
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/User/Credentials/Login'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
                    accessToken:
                      type: string
          '401':
            description: Unauthorized - Invalid login credentials.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Invalid login credentials.
    /user/register:
      post:
        tags:
          - user
        summary: Create user
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/User/Credentials/Register'
        responses:
          '201':
            description: CREATED
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
                    accessToken:
                      type: string
          '403':
            description: '***(default)*** Forbidden - Register has been manually desactivated.<br/><br/>By default, registration is disabled, to enable it, please set `ALLOW_REGISTRATION` to `true` inside .env'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Register has been manually desactivated.
          '409':
            description: Conflict - A user already exist with given email address.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        conflict:
                          type: string
                          example: A user already exist with given email address.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    /user/:
      get:
        tags:
          - user
        summary: List all users
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
      post:
        tags:
          - user
        summary: Create a user
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/User/Creation'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '409':
            description: Conflict - A user already exist with given email address.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        conflict:
                          type: string
                          example: A user already exist with given email address.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    '/user/{userId}/':
      get:
        tags:
          - user
        summary: Get a user
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No user match given ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No user match given ID.
      put:
        tags:
          - user
        summary: Update a user
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/User/Creation'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No user match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No user match this ID.
      delete:
        tags:
          - user
        summary: Delete a user
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK - User deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No user match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No user match this ID.
    /user/me:
      get:
        tags:
          - user
        summary: List all users
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/definitions/User/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
    /customer/:
      get:
        tags:
          - customer
        summary: Get a list of all customers
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Customer/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
      post:
        tags:
          - customer
        summary: Create a customer
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Customer/Creation'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    customer:
                      $ref: '#/definitions/Customer/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '409':
            description: Conflict - A customer already exist with given SIREN.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        conflict:
                          type: string
                          example: A customer already exist with given siren.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    '/customer/{customerId}':
      get:
        tags:
          - customer
        summary: Get a customer
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    customer:
                      $ref: '#/definitions/Customer/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No customer match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No customer match this ID.
      put:
        tags:
          - customer
        summary: Update a customer
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Customer/Creation'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    customer:
                      $ref: '#/definitions/Customer/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No customer match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No customer match this ID.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
      delete:
        tags:
          - customer
        summary: Delete a customer
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK - Customer deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    customer:
                      $ref: '#/definitions/Customer/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No customer match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No customer match this ID.
    /project/:
      get:
        tags:
          - project
        summary: Get a list of all projects
        description: ''
        parameters:
          - name: customerId
            in: query
            schema:
              type: integer
              description: Customer's id.
              example: '1'
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Project/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
      post:
        tags:
          - project
        summary: Create a project
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Project/Creation'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    project:
                      $ref: '#/definitions/Project/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    '/project/{projectId}':
      get:
        tags:
          - project
        summary: Get a project
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    project:
                      $ref: '#/definitions/Project/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No project match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No project match this ID.
      put:
        tags:
          - project
        summary: Update a project
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Project/Creation'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    project:
                      $ref: '#/definitions/Project/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No project match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No project match this ID.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
      delete:
        tags:
          - project
        summary: Delete a project
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK - Project deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    project:
                      $ref: '#/definitions/Project/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No project match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No project match this ID.
    /website/:
      get:
        tags:
          - website
        summary: Get a list of all websites
        description: ''
        parameters:
          - name: projectId
            in: query
            schema:
              type: integer
              description: Project's id.
              example: '1'
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Website/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
      post:
        tags:
          - website
        summary: Create a website
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Website/Creation'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    website:
                      $ref: '#/definitions/Website/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    '/website/{websiteId}':
      get:
        tags:
          - website
        summary: Get a website
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    website:
                      $ref: '#/definitions/Website/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No website match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No website match this ID.
      put:
        tags:
          - website
        summary: Update a website
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Website/Creation'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    website:
                      $ref: '#/definitions/Website/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No website match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No website match this ID.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
      delete:
        tags:
          - website
        summary: Delete a website
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK - Website deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    website:
                      $ref: '#/definitions/Website/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No website match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No website match this ID.
    /database/:
      get:
        tags:
          - database
        summary: Get a list of all websites
        description: ''
        parameters:
          - name: projectId
            in: query
            schema:
              type: integer
              description: Project's id.
              example: '1'
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Database/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
      post:
        tags:
          - database
        summary: Create a database
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Database/Creation'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    database:
                      $ref: '#/definitions/Database/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
    '/database/{websiteId}':
      get:
        tags:
          - database
        summary: Get a database
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    database:
                      $ref: '#/definitions/Database/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No database match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No database match this ID.
      put:
        tags:
          - database
        summary: Update a database
        description: ''
        consumes:
          - application/json
        produces:
          - application/json
        security:
          - passport: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/definitions/Database/Creation'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    database:
                      $ref: '#/definitions/Database/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No database match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No database match this ID.
          '422':
            description: Unprocessable Entity - Data given does not match prerequisites.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        field:
                          type: array
                          items:
                            type: string
                            example: Validation error
      delete:
        tags:
          - database
        summary: Delete a database
        description: ''
        produces:
          - application/json
        security:
          - passport: []
        responses:
          '200':
            description: OK - Database deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    database:
                      $ref: '#/definitions/Database/Structure'
          '401':
            description: Unauthorized - Unauthenticated.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthenticated.
          '404':
            description: Not Found - No database match this ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: No database match this ID.
  definitions:
    User:
      Structure:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          email:
            type: string
            format: email
            pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
        xml:
          name: UserStructure
      Credentials:
        Login:
          type: object
          properties:
            email:
              type: string
              format: email
              pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
            password:
              type: string
              format: password
              minLength: 8
          xml:
            name: UserCredentialLogin
        Register:
          type: object
          properties:
            name:
              type: string
              maxLength: 63
            email:
              type: string
              format: email
              pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
            password:
              type: string
              format: password
              minLength: 8
          xml:
            name: UserCredentialRegister
      Creation:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
            format: email
            pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
          password:
            type: string
            format: password
            minLength: 8
        xml:
          name: UserCreation
    Customer:
      Structure:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          siren:
            type: string
            length: 9
            nullable: true
          logo:
            type: string
            format: binary
            nullable: true
          address_street_number:
            type: string
            nullable: true
          address_street_name:
            type: string
            nullable: true
          address_zip_code:
            type: string
            length: 5
            nullable: true
          address_city:
            type: string
            nullable: true
          address_country:
            type: string
            nullable: true
          address_billing:
            type: string
            nullable: true
          tva_number:
            type: string
            length: '13'
            nullable: true
          website:
            type: string
            format: uri
            nullable: true
          source:
            type: string
            nullable: true
          referent_name:
            type: string
            nullable: true
          referent_email:
            type: string
            format: email
            pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
            nullable: true
          referent_number:
            type: string
            nullable: true
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
        xml:
          name: CustomerStructure
      Creation:
        type: object
        properties:
          name:
            type: string
          siren:
            type: string
            length: 9
            nullable: true
          logo:
            type: string
            format: binary
            nullable: true
          address_street_number:
            type: string
            nullable: true
          address_street_name:
            type: string
            nullable: true
          address_zip_code:
            type: string
            length: 5
            nullable: true
          address_city:
            type: string
            nullable: true
          address_country:
            type: string
            nullable: true
          address_billing:
            type: string
            nullable: true
          tva_number:
            type: string
            length: '13'
            nullable: true
          website:
            type: string
            format: uri
            nullable: true
          source:
            type: string
            nullable: true
          referent_name:
            type: string
            nullable: true
          referent_email:
            type: string
            format: email
            pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,64}$'
            nullable: true
          referent_number:
            type: string
            nullable: true
        xml:
          name: CustomerCreation
    Project:
      Structure:
        type: object
        properties:
          id:
            type: integer
            format: int64
          customerId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
        xml:
          name: ProjectStructure
      Creation:
        type: object
        properties:
          customerId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
        xml:
          name: ProjectCreation
    Website:
      Structure:
        type: object
        properties:
          id:
            type: integer
            format: int64
          projectId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
        xml:
          name: WebsiteStructure
      Creation:
        type: object
        properties:
          projectId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
        xml:
          name: WebsiteCreation
    Database:
      Structure:
        type: object
        properties:
          id:
            type: integer
            format: int64
          projectId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
        xml:
          name: DatabaseStructure
      Creation:
        type: object
        properties:
          projectId:
            type: integer
            format: int64
          name:
            type: string
          description:
            type: string
        xml:
          name: DatabaseCreation
  components:
    securitySchemes:
      passport:
        type: http
        scheme: bearer
        bearerFormat: JWT
created: 1594551331203
fileName: BackupOrganizerAPI-Doc
modified: 1596622557529
parentId: wrk_9dc8ae4a44f3408fad2bb82b8b086488
type: ApiSpec
